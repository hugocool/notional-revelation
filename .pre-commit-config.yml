# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
    # Clean usueless Notebook metadata that adds extra changes and conflicts - eg: cell run counts:
    -   repo: local
        hooks:
        -   id: nbdev_clean_nbs
            name: nbdev_clean_nbs
            entry: sh -xc echo "$@" | xargs --verbose -n1 sh -c \'for arg do nbdev_clean_nbs --fname "$arg"; black "$arg"; ...; done\' _ --
            additional_dependencies: [nbdev==1.1.12]
            files: .ipynb
            language: python
    # Convert the notebooks into python scripts and format them with black, one file at a time with xargs:
    -   repo: local
        hooks:
        -   id: nbdev_build_lib
            name: Build library with nbdev
            entry: sh -xc echo "$@" | xargs --verbose -n1 sh -c \'for arg do nbdev_build_lib --bare --fname "$arg"; black "$arg"; ...; done\' _ --
            additional_dependencies: [nbdev==1.1.12]
            files: .ipynb
            language: python
    # black format for any other non notebook derived py files:
    -   repo: https://github.com/psf/black
        rev: '19.10b0'
        hooks:
        -   id: black
            language_version: python3.7
    # Trailing white space removal includes other files as too but excluding ipynb files, also a large file check:
    -   repo: https://github.com/pre-commit/pre-commit-hooks
        rev: 'v2.4.0'
        hooks:
        -   id: trailing-whitespace
            exclude: .ipynb
        -   id: end-of-file-fixer
            exclude: .ipynb
        -   id: check-yaml
        -   id: check-added-large-files
    # Flake python code style check but excluding long line errors (E501):
    -   repo: https://gitlab.com/PyCQA/flake8
        rev: '3.8.3'
        hooks:
        -   id: flake8
            entry: flake8 --ignore=E501
            additional_dependencies: [flake8-typing-imports==1.6.0]
    # # Run a subset of tests marked "fast" for commits only:
    # -   repo: local
    #     hooks:
    #         -   id: tests
    #             name: run tests
    #             entry: pytest -v -m fast
    #             language: python
    #             additional_dependencies: [pre-commit, pytest]
    #             always_run: true
    #             pass_filenames: false
    #             types: [python]
    #             stages: [commit]
    # # Run all the tests, including slow ones, and stopping at first failure when pushing:
    # -   repo: local
    #     hooks:
    #         -   id: tests
    #             name: run tests
    #             entry: pytest -x
    #             language: system
    #             additional_dependencies: [pre-commit, pytest]
    #             types: [python]
    #             stages: [push]